# Declarando um serviço para o qual o nginx vai direcionar tráfego
# o nome é client
upstream client{
    # O serviço atende pela URL client:3000
    # No docker-compose, definimos o nome do serviço como client
    # Por isso temos a URL abaixo.
    server client:3000;
}

# Declarando um serviço para o qual o nginx vai direcionar tráfego
# o nome é client
upstream server{
    # O serviço atende pela URL server:3000
    # No docker-compose, definimos o nome do serviço como server
    # Por isso temos a URL abaixo.
    server server:5000;
}

server {
    listen 80;

    location / {
        proxy_pass http://client;
    }

    location /api {
        # Se chegar uma requisição com o path /api/values/all
        # redireciona a requisição para a URL http://server
        # porém o path da requisição redirecionada vai ser /values/all
        # veja que a parte /api/ é cortada. 
        rewrite /api/(.*) /$1 break;
        proxy_pass http://server;
    }

    # Libera conexões do tipo web-socket
    # A aplicação em React usa websocket com o ReactServer
    # Como o Nginx tá na frente como um proxy, ele tem que liberar esse tipo de conexão.
    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        pxoy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}